
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Set;

public class Solution {
  public List<Integer> topKFrequent(int[] nums, int k) {
  List<Integer>[] bucket = new List[nums.length + 1];
	HashMap<Integer, Integer> map = new HashMap<>();
	
	
	for(int num : nums){
		if(map.get(num) != null){
			map.put(num, map.get(num) + 1);
		}else {
			map.put(num, 1);
		}
	}
  // remember this solution to create a map
  //for (int num : nums) {
	//	map.put(num, map.getOrDefault(num, 0) + 1);
	//}

	
	
	for(int key : map.keySet()){
		int fre = map.get(key);
		if(bucket[fre] == null){
			bucket[fre] = new ArrayList<>();
		}
		bucket[fre].add(key);
	}
    
	List<Integer> res = new ArrayList<>();
	
	for(int pos = bucket.length - 1; pos >= 0 && res.size() < k; pos--){
		if (bucket[pos] != null) {
			res.addAll(bucket[pos]);
		}
	}
    return res;
        
    }
}
