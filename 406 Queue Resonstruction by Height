
//i've not any thinks about this question...
//firstly,sort the list by height,(the highest people are at the front),then sort by their k-value)


public class Solution {
    public int[][] reconstructQueue(int[][] people) {
        Arrays.sort(people,new Comparator<int[]>() {             //Arrays  sort 方法 
    		public int compare(int[]o1, int[]o2){                //构造一个compare方法   返回一个int  （小到大排序）
    			return o1[0]!=o2[0]? -o1[0]+o2[0]:o1[1]-o2[1];      //pay attention to this a==b?c:d
    		}
		});
    	LinkedList<int[]> res = new LinkedList<>();               //LinkedList .add
    	for(int[] cur:people){                                     // should see this a lot to understand
    		res.add(cur[1],cur);
    	}
		return res.toArray(new int[people.length][]);                //almost get this question except this row.why[people.length]
    }
}
