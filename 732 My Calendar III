//mysolution   time exceeded
class MyCalendarThree {

	int[][] calendar;
	int num = 0;
	
    public MyCalendarThree() {
        calendar = new int[400][2];
    }
    
    public int book(int start, int end) {
		int res = 0;
		calendar[num++][0] = start;
		calendar[num++][1] = end;
		for (int i = 0; i < num; i++) {
			if (!(end <= calendar[i][0] || start > calendar[i][0])) {
				res++;
			}
		}
		return res;
    }
}


//
class MyCalendarThree {
    TreeMap<Integer, Integer> delta;

    public MyCalendarThree() {
        delta = new TreeMap();
    }

    public int book(int start, int end) {
        delta.put(start, delta.getOrDefault(start, 0) + 1);
        delta.put(end, delta.getOrDefault(end, 0) - 1);

        int active = 0, ans = 0;
        for (int d: delta.values()) {
            active += d;
            if (active > ans) ans = active;
        }
        return ans;
    }
}
