public class Solution {
    public int[] countBits(int num) {
        int[] out = new int[num+1];
        for(int i=0;i<=num;i++){
        	out[i] = Integer.bitCount(i);                                  //my solution
        }
        return out;
    }
}




public int[] countBits(int num) {
    int[] ret = new int[num+1];
    ret[0] = 0;
    int pow = 1;
    for(int i = 1, t = 0; i <= num; i++, t++) {                    //不用数位的解决方式。
        if(i == pow) {
            pow *= 2;                                 //从结果上来看 0      1       3           7   
            t = 0;                                    //            [0]   [0,1]   [0,1,1,2]    [0,1,1,2,1,2,2,3]
        }                                             //  以上四个数字  的结果均为前一个的分别加1 接上去
        ret[i] = ret[t] + 1;
    }
    return ret;
}



public int[] countBits(int num) {                                     //一般来说的方法。
    int[] f = new int[num + 1];
    for (int i=1; i<=num; i++) f[i] = f[i >> 1] + (i & 1);            //迭代法。不断右移一位加上末位与运算
    return f;
}



