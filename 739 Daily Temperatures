// time exceeded
class Solution {
    public int[] dailyTemperatures(int[] temperatures) {
    	int num = 0;
    	int[] res = new int[temperatures.length];
    	for (int i = 0; i < temperatures.length; i++) {
			for (int j = i; j < temperatures.length; j++) {
				if (temperatures[j] > temperatures[i]) {
					res[i] = num;
					num = 0;
					break;
				}else {
					num++;
					if (j == temperatures.length - 1) {
						num = 0;
					}
				}
			}
				
		}
		return res;
    }
}

//stack   
class Solution {
    public int[] dailyTemperatures(int[] temperatures) {
    	Stack<Integer> stack = new Stack<Integer>();
    	int[] res = new int[temperatures.length];
    	for (int i = 0; i < temperatures.length; i++) {
			while (!stack.isEmpty() && temperatures[i] > temperatures[stack.peek()]) {
				int idx = stack.pop();
				res[idx] = i - idx;
			}
			stack.push(i);
		}
    	return res;
    }
}


//array
public int[] dailyTemperatures(int[] temperatures) {
    int[] stack = new int[temperatures.length];
    int top = -1;
    int[] ret = new int[temperatures.length];
    for(int i = 0; i < temperatures.length; i++) {
        while(top > -1 && temperatures[i] > temperatures[stack[top]]) {
            int idx = stack[top--];
            ret[idx] = i - idx;
        }
        stack[++top] = i;
    }
    return ret;
}
