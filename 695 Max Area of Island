//  tips :    

class Solution {
	int[][] visited;
	int max = 0;
	
    public int maxAreaOfIsland(int[][] grid) {
    	visited = new int[grid.length][grid[0].length];
    	for (int i = 0; i < grid.length; i++) {
			for (int j = 0; j < grid[0].length; j++) {
				if (visited[i][j] == 0) {
					int cur = getMax(i, j, grid);
					if (cur > max) {                                     // tip 1:    Math.max()   here
						max = cur;
					}
				}
			}
		}
		return max;
    }
    
    private int getMax(int i, int j, int[][] grid){
    	if (i < 0 || i >= grid.length || j < 0 || j >= grid[0].length || visited[i][j] == 1 || grid[i][j] == 0) {     //tip 2: must put i j in beginning
			return 0;
		}
			visited[i][j] = 1;
			return 1 + getMax(i-1, j, grid) + getMax(i+1, j, grid) + getMax(i, j-1, grid) + getMax(i, j+1, grid);
    }
}
