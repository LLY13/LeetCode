public class Solution {
    public int magicalString(int n) {
        ArrayList<Integer> ms = new ArrayList<>();
    	int res = 0;
    	ms.add(1);
    	ms.add(2);
    	ms.add(2);
    	int size = ms.size();
    	for(int i=2;size<=n;i++){
    		if(i%2==0){
    			if(ms.get(i)==1){
    				ms.add(1);
    			}else {
					ms.add(1);
					ms.add(1);
				}
    		}else {
    			if(ms.get(i)==1){                          //my solution    create magic string at first; then count amount of 1
    				ms.add(2);                               // use StringBuffer is better than Arrayilst
    			}else {
					ms.add(2);
					ms.add(2);
				}
			}
    		size = ms.size();
    	}
    	
    	for(int i=0;i<n;i++){
    		if(ms.get(i)==1){
    			res++;
    		}
    	}
    	
    	return res;
    }
}







public class Solution {
    public int magicalString(int n) {
        if (n <= 0) return 0;
        if (n <= 3) return 1;
        
        int[] a = new int[n + 1];
        a[0] = 1; a[1] = 2; a[2] = 2;
        int head = 2, tail = 3, num = 1, result = 1;                     //smarter way
        
        while (tail < n) {                                          
            for (int i = 0; i < a[head]; i++) {                          //use this loop to add result;
                a[tail] = num;
                if (num == 1 && tail < n) result++;
                tail++;
            }
            num = num ^ 3;                                               //1^3=2   2^3=1 !!!
            head++; 
        }
        
        return result;
    }
}
